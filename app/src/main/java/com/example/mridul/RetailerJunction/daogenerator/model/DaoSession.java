package com.example.mridul.RetailerJunction.daogenerator.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.mridul.RetailerJunction.daogenerator.model.Event;
import com.example.mridul.RetailerJunction.daogenerator.model.AnalyticsLocation;

import com.example.mridul.RetailerJunction.daogenerator.model.EventDao;
import com.example.mridul.RetailerJunction.daogenerator.model.AnalyticsLocationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig eventDaoConfig;
    private final DaoConfig analyticsLocationDaoConfig;

    private final EventDao eventDao;
    private final AnalyticsLocationDao analyticsLocationDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        eventDaoConfig = daoConfigMap.get(EventDao.class).clone();
        eventDaoConfig.initIdentityScope(type);

        analyticsLocationDaoConfig = daoConfigMap.get(AnalyticsLocationDao.class).clone();
        analyticsLocationDaoConfig.initIdentityScope(type);

        eventDao = new EventDao(eventDaoConfig, this);
        analyticsLocationDao = new AnalyticsLocationDao(analyticsLocationDaoConfig, this);

        registerDao(Event.class, eventDao);
        registerDao(AnalyticsLocation.class, analyticsLocationDao);
    }
    
    public void clear() {
        eventDaoConfig.getIdentityScope().clear();
        analyticsLocationDaoConfig.getIdentityScope().clear();
    }

    public EventDao getEventDao() {
        return eventDao;
    }

    public AnalyticsLocationDao getAnalyticsLocationDao() {
        return analyticsLocationDao;
    }

}
